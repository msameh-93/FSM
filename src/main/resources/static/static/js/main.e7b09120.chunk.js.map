{"version":3,"sources":["reducers/fileReducer.js","reducers/errorReducer.js","reducers/userReducer.js","reducers/combineReducers.js","store/store.js","components/exceptions/ErrorBoundary.js","components/layout/Header.js","actions/userAction.js","components/FileItem.js","actions/fileActions.js","components/Dashboard.js","components/File.js","components/layout/LandingPage.js","components/layout/Signin.js","components/layout/Signup.js","App.js","serviceWorker.js","index.js"],"names":["initialState","files","file","fileReducer","state","action","type","payload","filter","el","id","errors","errorReducer","user","valid","userReducer","combineReducer","combineReducers","fileReduxStore","errorReduxStore","userReduxStore","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","compose","applyMiddleware","ErrorBoundary","props","hasError","clearError","bind","e","this","setState","recProps","error","info","className","to","onClick","children","Component","ConnectedErrorBoundary","connect","currState","notAuthAccess","Header","myValid","signOut","myUserName","ConnectedHeader","fullname","dispatch","axios","defaults","headers","common","localStorage","removeItem","FileItem","onUpdateClick","onDeleteClick","onDownloadClick","bootbox","prompt","input","formData","FormData","append","updateFile","update","downloadFile","filename","confirm","result","deleteFile","serial","description","uploadedDate","ConnectedFileItem","fileId","a","delete","response","data","get","console","log","url","URL","createObjectURL","Blob","link","document","createElement","href","fileName","setAttribute","body","appendChild","click","remove","newFile","post","Dashboard","updateComp","myErrors","accessDenied","alert","message","getAllFiles","myFiles","length","map","key","ConnectedDashboard","storeState","File","onFileChange","onChange","onSubmit","preventDefault","target","name","value","addFile","history","accept","classnames","disabled","placeholder","connectedFile","push","LandingPage","ConnectedLandingPage","Signin","username","password","myError","loginReq","signIn","ConnectedSignin","myUser","token","setItem","decodedUser","jwt_decode","Signup","passwordConfirm","role","newUser","signUp","required","ConnectedSignup","App","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e7b09120.chunk.js","sourcesContent":["const initialState= {\r\n    files: [],\r\n    file: {}\r\n}\r\n\r\nconst fileReducer= (state= initialState, action) => {\r\n    switch(action.type) {\r\n        case \"GET_FILES\":\r\n            return {\r\n                ...state,\r\n                files: action.payload\r\n            }\r\n        case \"DELETE_FILE\":\r\n            return {\r\n                ...state,\r\n                files: state.files.filter(el => el.id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default fileReducer;","const initialState= {\r\n    errors: []\r\n}\r\n\r\nconst errorReducer= (state= initialState, action) => {\r\n    switch(action.type) {\r\n        case \"GET_ERRORS\":\r\n            return {\r\n                ...state,\r\n                errors: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default errorReducer;","const initialState= {\r\n    user: {},\r\n    valid: false\r\n}\r\n\r\n\r\nconst userReducer= (state= initialState, action) => {\r\n    switch(action.type) {\r\n        case \"SIGN_IN\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                valid: action.payload ? true : false\r\n            }\r\n        case \"SIGN_OUT\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                valid: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport fileReducer from \"./fileReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst combineReducer= combineReducers({\r\n    fileReduxStore: fileReducer,\r\n    errorReduxStore: errorReducer,\r\n    userReduxStore: userReducer\r\n});\r\n\r\nexport default combineReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport combineReducers from \"../reducers/combineReducers\";\r\n\r\nconst initialState= {};\r\n\r\nconst middleware= [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\n  if (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store= createStore(\r\n        combineReducers,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n        )\r\n    )\r\n  } else {\r\n    store= createStore(\r\n        combineReducers,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware))\r\n    )\r\n  }\r\n\r\n  export default store;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            hasError: false\r\n        }\r\n        this.clearError= this.clearError.bind(this);\r\n    }\r\n    clearError(e) {\r\n        this.setState({\r\n            hasError: false\r\n        })\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        this.setState({\r\n            hasError: recProps.hasError\r\n        })\r\n    }\r\n    componentDidCatch(error, info) {\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n    }\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <hr /> \r\n                            <hr />\r\n                            {\r\n                                <div className=\"alert alert-danger text-center\">\r\n                                <strong>Unauthorized Access...</strong><br />\r\n                                Return to homepage<br />\r\n                                <Link to=\"/\" onClick={this.clearError} className=\"btn btn-lg btn-info\">\r\n                                Home\r\n                                </Link>\r\n                                </div>\r\n                            }\r\n                            <hr />  \r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (currState) => {\r\n    if(currState.errorReduxStore.errors.notAuthAccess)\r\n    {\r\n        return {\r\n            hasError: true\r\n        }\r\n    } else {\r\n        return {\r\n            hasError: false\r\n        }\r\n    }\r\n}\r\nconst ConnectedErrorBoundary= connect(mapStateToProps, null)(ErrorBoundary);\r\n\r\nexport default ConnectedErrorBoundary;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {signOut} from \"./../../actions/userAction\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            valid: false\r\n        }\r\n        this.onClick= this.onClick.bind(this);\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        this.setState({\r\n            valid: recProps.myValid\r\n        })\r\n    }\r\n    onClick(e) {\r\n        this.props.signOut();\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                {\r\n                    this.state.valid &&\r\n                    <div className=\"collapse navbar-collapse navbar-brand\" id=\"mobile-nav\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                                Welcome {this.props.myUserName}\r\n                                </Link>\r\n                                </li>\r\n                            </ul>\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link onClick={this.onClick} to=\"/\" className=\"btn btn-sm btn-warning\">\r\n                                    Sign Out\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                    </div>\r\n                }\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (currState) => {\r\n    return {\r\n        myUserName: currState.userReduxStore.user.fullname,\r\n        myValid: currState.userReduxStore.valid\r\n    }\r\n}\r\n\r\nconst ConnectedHeader= connect(mapStateToProps, {signOut})(Header);\r\n\r\nexport default ConnectedHeader;","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst signUp= (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/signup\", newUser);\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n        history.push(\"/signin\");\r\n    } catch(error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nconst signIn= (loginReq) => async dispatch => {\r\n    try {\r\n        const response= await axios.post(\"/api/users/signin\", loginReq);\r\n        const {valid, token}= response.data;\r\n\r\n        localStorage.setItem(\"jwt\", token);\r\n        if(valid) {\r\n            axios.defaults.headers.common[\"Authorization\"]= token;\r\n        } else {\r\n            delete axios.defaults.headers.common[\"Authorization\"];\r\n        }\r\n\r\n        const decodedUser= jwt_decode(token);\r\n\r\n        dispatch({\r\n            type: \"SIGN_IN\",\r\n            payload: decodedUser\r\n        })\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nconst signOut= () => dispatch => {\r\n    axios.defaults.headers.common[\"Authorization\"]= \"\";\r\n    localStorage.removeItem(\"jwt\");\r\n    dispatch({\r\n        type: \"SIGN_OUT\",\r\n        payload: {}\r\n    })\r\n}\r\nexport {signUp, signIn, signOut};","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport \"bootstrap\";\r\nimport bootbox from \"bootbox\";\r\n\r\nimport {deleteFile, downloadFile, updateFile} from \"./../actions/fileActions\";\r\n\r\nclass FileItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onUpdateClick= this.onUpdateClick.bind(this);\r\n        this.onDeleteClick= this.onDeleteClick.bind(this);\r\n        this.onDownloadClick= this.onDownloadClick.bind(this);\r\n    }\r\n    onUpdateClick(e) {\r\n        bootbox.prompt(\"Insert new name: \", (input) => { \r\n            const formData= new FormData();\r\n            formData.append(\"id\", this.props.file.id);\r\n            formData.append(\"filename\", input);\r\n\r\n            this.props.updateFile(formData, this.props.update);\r\n        });\r\n    }\r\n    onDownloadClick(e) {\r\n        this.props.downloadFile(this.props.file.id, this.props.file.filename);\r\n    }\r\n    onDeleteClick(e) {\r\n        bootbox.confirm(\"Are you sure you want to delete this file?\", (result) => {\r\n            if(result){\r\n                this.props.deleteFile(this.props.file.id);\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const {file}= this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <span className=\"mx-auto\">Serial Number<br/>{this.props.file.serial}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                            <h3>{file.filename}</h3>\r\n                            <p>{file.description}</p>\r\n                            <p><strong>Upload Date: </strong>{file.uploadedDate}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 d-none d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to=\"/dashboard\" onClick={this.onDownloadClick} >\r\n                                    <li className=\"list-group-item update\">\r\n                                        <i className=\"fas fa-file-download\"> Download</i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to=\"/dashboard\" onClick={this.onUpdateClick} >\r\n                                    <li className=\"list-group-item update\">\r\n                                        <i className=\"far fa-window-restore\"> Rename File Name</i>\r\n                                    </li>\r\n                                </Link>\r\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete</i>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst ConnectedFileItem= connect(null, {deleteFile, downloadFile, updateFile})(FileItem);\r\n\r\nexport default ConnectedFileItem;","import axios from \"axios\";\r\n\r\nconst getAllFiles= () => async dispatch => {\r\n    try {\r\n        const response= await axios.get(\"/api/files\");\r\n        dispatch({\r\n            type: \"GET_FILES\",\r\n            payload: response.data\r\n        })\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\nconst addFile= (newFile, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/files\", newFile);\r\n        history.push(\"/dashboard\");\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n\r\n    }\r\n};\r\nconst updateFile= (newFile, update) => async dispatch => {\r\n    try {\r\n        await axios.post(`/api/files/update`, newFile);\r\n        update();\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n\r\n    }\r\n};\r\nconst deleteFile= (fileId) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/files/${fileId}`);\r\n        dispatch({\r\n            type: \"DELETE_FILE\",\r\n            payload: fileId\r\n        })\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n\r\n    }\r\n}\r\nconst downloadFile= (fileId, filename) => async dispatch => {\r\n    try {\r\n        const response= await axios.get(`/api/files/download/${fileId}`);\r\n        console.log(response);\r\n        console.log(filename);\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        const fileName = filename; // whatever your file name .\r\n        link.setAttribute('download', fileName);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        link.remove();// you need to remove that elelment which is created before.\r\n\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\nexport {getAllFiles, addFile, updateFile, deleteFile, downloadFile };","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport \"bootstrap\";\r\nimport bootbox from \"bootbox\";\r\n\r\nimport {getAllFiles} from \"./../actions/fileActions\";\r\n\r\nimport FileItem from \"./FileItem\";\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            errors: false,\r\n        }\r\n        this.updateComp= this.updateComp.bind(this);\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        if(recProps.myValid) {\r\n            this.setState({\r\n                errors: recProps.myValid\r\n            })\r\n        }\r\n        if(recProps.myErrors.accessDenied) {\r\n            bootbox.alert({\r\n                message: recProps.myErrors.accessDenied,\r\n                className: 'rubberBand animated alert alert-danger text-center'\r\n            });\r\n        }\r\n    }\r\n    componentDidMount(e) {\r\n        this.props.getAllFiles();\r\n    }\r\n    updateComp() {\r\n        this.props.getAllFiles();\r\n    }\r\n    render() {\r\n        const {myFiles, myValid}= this.props;\r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Link to=\"/addFile\" className=\"btn btn-lg btn-info\">\r\n                            Upload\r\n                            </Link>\r\n                            <br />\r\n                            <hr /> \r\n                            <hr />\r\n                            {\r\n                                !myValid && \r\n                                (\r\n                                    <div className=\"alert alert-danger text-center\">\r\n                                    <strong>Invalid log in credentials...</strong><br />\r\n                                    Please log in to use the File Management Tool!<br />\r\n                                    <Link to=\"/signin\" className=\"btn btn-lg btn-info\">\r\n                                    Login\r\n                                    </Link>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            {\r\n                                myFiles.length === 0 && myValid && \r\n                                (\r\n                                    <div className=\"alert alert-success text-center\">\r\n                                    Welcome to your Personal File Management Tool...<br />\r\n                                    Press <strong>Upload</strong> to start uploading files!<br />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            {\r\n                                myFiles &&\r\n                                myFiles.map(el => {\r\n                                    return (<FileItem update={this.updateComp} key={el.id} file={el} />);\r\n                                })\r\n                            }                        \r\n                            <br />\r\n                            <hr />  \r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps= (storeState) => {\r\n    \r\n    return {\r\n        myFiles: storeState.fileReduxStore.files,\r\n        myValid: storeState.userReduxStore.valid,\r\n        myErrors: storeState.errorReduxStore.errors\r\n    }\r\n}\r\nconst ConnectedDashboard= connect(mapStateToProps, {getAllFiles})(Dashboard);\r\n\r\nexport default ConnectedDashboard;\r\n\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nimport {addFile} from \"./../actions/fileActions\";\r\n\r\nclass File extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            file: null,\r\n            filename: \"\",\r\n            description: \"\",\r\n            errors: {}\r\n        }\r\n        this.onFileChange= this.onFileChange.bind(this);\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        if(recProps.myErrors) {\r\n            this.setState({\r\n                errors: recProps.myErrors\r\n            })\r\n        }\r\n    }\r\n    onFileChange(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            file: e.target.files[0],\r\n            filename: e.target.files[0].name\r\n        })\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const formData= new FormData();\r\n        formData.append(\"filename\", this.state.filename);\r\n        formData.append(\"description\", this.state.description);\r\n        formData.append(\"file\", this.state.file);\r\n        \r\n        this.props.addFile(formData, this.props.history);\r\n    }\r\n    render() {\r\n        const {errors}= this.state;\r\n        return (\r\n            <div>  \r\n                <div className=\"register\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Upload a file</h5>\r\n                                {\r\n                                    errors.file && \r\n                                    (\r\n                                        <div className=\"alert alert-danger text-center\">\r\n                                        <strong>{errors.file}</strong><br />\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"custom-file\">\r\n                                            <input \r\n                                                type=\"file\" \r\n                                                accept=\".txt,.pdf\"\r\n                                                className={classnames(\"form-control form-control-lg\", {\r\n                                                    \"is-invalid\": errors.filename\r\n                                                })} \r\n                                                name=\"file\" \r\n                                                onChange={this.onFileChange}/>\r\n                                            {errors.file && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.file}\r\n                                            </div>\r\n                                          )}\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <hr />\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" \r\n                                        disabled\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                                    \"is-invalid\": errors.filename\r\n                                                })} \r\n                                        placeholder=\"File Name\"\r\n                                        name=\"filename\"\r\n                                        value={this.state.filename}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.filename && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.filename}\r\n                                            </div>\r\n                                          )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.description\r\n                                        })} \r\n                                        placeholder=\"File Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange}></textarea>\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.description}\r\n                                            </div>\r\n                                          )}\r\n                                    </div>\r\n                                    <input type=\"submit\" value=\"Upload\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (storeState) => {\r\n    return {\r\n        myErrors: storeState.errorReduxStore.errors\r\n    }\r\n}\r\nconst connectedFile= connect(mapStateToProps, {addFile})(File);\r\n\r\nexport default connectedFile;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass LandingPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">File Management System</h1>\r\n                                <p className=\"lead\">\r\n                                    Please log in to start managing your files!\r\n                                </p>\r\n                                <hr />\r\n                                <Link to=\"/signup\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                    Sign Up\r\n                                </Link>\r\n                                <Link to=\"/signin\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst ConnectedLandingPage= connect(null, null)(LandingPage);\r\n\r\nexport default ConnectedLandingPage;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {signIn} from \"./../../actions/userAction\";\r\n\r\nclass Signin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        }\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        if(recProps.myError) {\r\n            this.setState({\r\n                errors: recProps.myError\r\n            })\r\n        }\r\n        if(recProps.myValid) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const loginReq= {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        this.props.signIn(loginReq);\r\n    }\r\n    render() {\r\n        const {errors}= this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            {\r\n                                errors.username && \r\n                                (\r\n                                    <div className=\"alert alert-danger text-center\">\r\n                                    <strong>Sign up instead?</strong><br />\r\n                                    <Link to=\"/signup\" className=\"btn btn-lg btn-info\">\r\n                                    Sign Up\r\n                                    </Link>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"email\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })} \r\n                                        placeholder=\"Email Address\" \r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.username && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.username}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}  \r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.password && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.password}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (currState) => {\r\n    return {\r\n        myUser: currState.userReduxStore.user,\r\n        myError: currState.errorReduxStore.errors,\r\n        myValid: currState.userReduxStore.valid\r\n    }\r\n}\r\n\r\nconst ConnectedSignin= connect(mapStateToProps, {signIn})(Signin);\r\n\r\nexport default ConnectedSignin;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\nimport {signUp} from \"./../../actions/userAction\";\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            fullname: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            passwordConfirm: \"\",\r\n            role: \"\",\r\n            errors: {}\r\n        }\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        if(recProps.myErrors) {\r\n            this.setState({\r\n                errors: recProps.myErrors\r\n            })\r\n        }\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser= {\r\n            fullname: this.state.fullname,\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            role: this.state.role,\r\n            passwordConfirm: this.state.passwordConfirm\r\n        }\r\n        this.props.signUp(newUser, this.props.history);\r\n    }\r\n    render() {\r\n        const { errors }= this.state;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            {\r\n                                errors.username && \r\n                                (\r\n                                    <div className=\"alert alert-danger text-center\">\r\n                                    <strong>Sign in instead?</strong><br />\r\n                                    <Link to=\"/signin\" className=\"btn btn-lg btn-info\">\r\n                                    Sign in\r\n                                    </Link>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.fullname\r\n                                        })} \r\n                                        placeholder=\"Name\" \r\n                                        name=\"fullname\"\r\n                                        required\r\n                                        value={this.state.fullname}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.fullname && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.fullname}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"email\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })} \r\n                                        placeholder=\"Email Address\" \r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.username && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.username}\r\n                                            </div>\r\n                                          )}\r\n        \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}  \r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.password && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.password}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.passwordConfirm\r\n                                        })} \r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"passwordConfirm\"\r\n                                        value={this.state.passwordConfirm}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.passwordConfirm && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.passwordConfirm}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.role\r\n                                        })} \r\n                                        name=\"role\"\r\n                                        value={this.state.role}\r\n                                        onChange={this.onChange}>\r\n                                        <option value=\"\">Select Role</option>\r\n                                        <option value=\"ADMIN\">Adminstrator</option>\r\n                                        <option value=\"USER\">User</option>\r\n                                    </select>\r\n                                    {errors.role && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.role}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToError= (currState) => {\r\n    return {\r\n        myErrors: currState.errorReduxStore.errors\r\n    }\r\n}\r\nconst ConnectedSignup= connect(mapStateToError, {signUp})(Signup);\r\n\r\nexport default ConnectedSignup;","import React, {Component} from 'react';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter, Route } from \"react-router-dom\";\nimport store from \"./store/store\";\n/**Styling**/\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n/*********Components**********/\nimport ErrorBoundary from \"./components/exceptions/ErrorBoundary\";\nimport Header from \"./components/layout/Header\";\nimport Dashboard from \"./components/Dashboard\";\nimport File from \"./components/File\";\nimport LandingPage from \"./components/layout/LandingPage\";\nimport Signin from \"./components/layout/Signin\";\nimport Signup from \"./components/layout/Signup\";\n/*******************************/\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <ErrorBoundary>\n              <Header />\n              <Route path=\"/\" component={LandingPage} exact={true} />\n              <Route path=\"/signin\" component={Signin} exact={true} />\n              <Route path=\"/signup\" component={Signup} exact={true} />\n\n              <Route path=\"/dashboard\" component={Dashboard} exact={true}/>\n              <Route path=\"/addFile\" component={File} exact={true} />\n            </ErrorBoundary>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}