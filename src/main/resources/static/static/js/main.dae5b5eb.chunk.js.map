{"version":3,"sources":["reducers/fileReducer.js","reducers/errorReducer.js","reducers/userReducer.js","reducers/combineReducers.js","store/store.js","components/layout/Header.js","actions/userAction.js","components/FileItem.js","actions/fileActions.js","components/Dashboard.js","actions/errorActions.js","components/File.js","components/layout/LandingPage.js","components/layout/Signin.js","components/layout/Signup.js","App.js","serviceWorker.js","index.js"],"names":["initialState","files","file","fileReducer","state","action","type","payload","filter","el","id","errors","errorReducer","user","valid","userReducer","combineReducer","combineReducers","fileReduxStore","errorReduxStore","userReduxStore","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","compose","applyMiddleware","Header","props","onClick","bind","recProps","this","setState","myValid","e","signOut","className","to","myUserName","Component","ConnectedHeader","connect","currState","fullname","dispatch","axios","defaults","headers","common","localStorage","removeItem","FileItem","onUpdateClick","onDeleteClick","onDownloadClick","bootbox","prompt","input","formData","FormData","append","updateFile","update","downloadFile","filename","confirm","result","deleteFile","serial","description","uploadDate","ConnectedFileItem","fileId","a","delete","response","data","get","url","URL","createObjectURL","Blob","link","document","createElement","href","fileName","setAttribute","body","appendChild","click","remove","newFile","post","Dashboard","updateComp","myErrors","accessDenied","alert","message","clearErrors","getAllFiles","myFiles","length","map","key","ConnectedDashboard","storeState","File","onFileChange","onChange","onSubmit","preventDefault","target","name","value","addFile","history","accept","classnames","disabled","placeholder","connectedFile","push","LandingPage","ConnectedLandingPage","Signin","username","password","console","log","myError","loginReq","signIn","ConnectedSignin","myUser","token","setItem","decodedUser","jwt_decode","Signup","passwordConfirm","role","newUser","signUp","required","ConnectedSignup","App","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.dae5b5eb.chunk.js","sourcesContent":["const initialState= {\r\n    files: [],\r\n    file: {}\r\n}\r\n\r\nconst fileReducer= (state= initialState, action) => {\r\n    switch(action.type) {\r\n        case \"GET_FILES\":\r\n            return {\r\n                ...state,\r\n                files: action.payload\r\n            }\r\n        case \"DELETE_FILE\":\r\n            return {\r\n                ...state,\r\n                files: state.files.filter(el => el.id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default fileReducer;","const initialState= {\r\n    errors: []\r\n}\r\n\r\nconst errorReducer= (state= initialState, action) => {\r\n    switch(action.type) {\r\n        case \"GET_ERRORS\":\r\n            return {\r\n                ...state,\r\n                errors: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default errorReducer;","const initialState= {\r\n    user: {},\r\n    valid: false\r\n}\r\n\r\n\r\nconst userReducer= (state= initialState, action) => {\r\n    switch(action.type) {\r\n        case \"SIGN_IN\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                valid: action.payload ? true : false\r\n            }\r\n        case \"SIGN_OUT\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                valid: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport fileReducer from \"./fileReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst combineReducer= combineReducers({\r\n    fileReduxStore: fileReducer,\r\n    errorReduxStore: errorReducer,\r\n    userReduxStore: userReducer\r\n});\r\n\r\nexport default combineReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport combineReducers from \"../reducers/combineReducers\";\r\n\r\nconst initialState= {};\r\n\r\nconst middleware= [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\n  if (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store= createStore(\r\n        combineReducers,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n        )\r\n    )\r\n  } else {\r\n    store= createStore(\r\n        combineReducers,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware))\r\n    )\r\n  }\r\n\r\n  export default store;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {signOut} from \"./../../actions/userAction\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            valid: false\r\n        }\r\n        this.onClick= this.onClick.bind(this);\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        this.setState({\r\n            valid: recProps.myValid\r\n        })\r\n    }\r\n    onClick(e) {\r\n        this.props.signOut();\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                {\r\n                    this.state.valid &&\r\n                    <div className=\"collapse navbar-collapse navbar-brand\" id=\"mobile-nav\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                                Welcome {this.props.myUserName}\r\n                                </Link>\r\n                                </li>\r\n                            </ul>\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link onClick={this.onClick} to=\"/\" className=\"btn btn-sm btn-warning\">\r\n                                    Sign Out\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                    </div>\r\n                }\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (currState) => {\r\n    return {\r\n        myUserName: currState.userReduxStore.user.fullname,\r\n        myValid: currState.userReduxStore.valid\r\n    }\r\n}\r\n\r\nconst ConnectedHeader= connect(mapStateToProps, {signOut})(Header);\r\n\r\nexport default ConnectedHeader;","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst signUp= (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/signup\", newUser);\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n        history.push(\"/signin\");\r\n    } catch(error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nconst signIn= (loginReq) => async dispatch => {\r\n    try {\r\n        const response= await axios.post(\"/api/users/signin\", loginReq);\r\n        const {valid, token}= response.data;\r\n\r\n        localStorage.setItem(\"jwt\", token);\r\n        if(valid) {\r\n            axios.defaults.headers.common[\"Authorization\"]= token;\r\n        } else {\r\n            delete axios.defaults.headers.common[\"Authorization\"];\r\n        }\r\n\r\n        const decodedUser= jwt_decode(token);\r\n\r\n        dispatch({\r\n            type: \"SIGN_IN\",\r\n            payload: decodedUser\r\n        })\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nconst signOut= () => dispatch => {\r\n    axios.defaults.headers.common[\"Authorization\"]= \"\";\r\n    localStorage.removeItem(\"jwt\");\r\n    dispatch({\r\n        type: \"SIGN_OUT\",\r\n        payload: {}\r\n    })\r\n}\r\nexport {signUp, signIn, signOut};","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport \"bootstrap\";\r\nimport bootbox from \"bootbox\";\r\n\r\nimport {deleteFile, downloadFile, updateFile} from \"./../actions/fileActions\";\r\n\r\nclass FileItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onUpdateClick= this.onUpdateClick.bind(this);\r\n        this.onDeleteClick= this.onDeleteClick.bind(this);\r\n        this.onDownloadClick= this.onDownloadClick.bind(this);\r\n    }\r\n    onUpdateClick(e) {\r\n        bootbox.prompt(\"Insert new name: \", (input) => { \r\n            const formData= new FormData();\r\n            formData.append(\"id\", this.props.file.id);\r\n            formData.append(\"filename\", input);\r\n\r\n            this.props.updateFile(formData, this.props.update);\r\n        });\r\n    }\r\n    onDownloadClick(e) {\r\n        this.props.downloadFile(this.props.file.id, this.props.file.filename);\r\n    }\r\n    onDeleteClick(e) {\r\n        bootbox.confirm(\"Are you sure you want to delete this file?\", (result) => {\r\n            if(result){\r\n                this.props.deleteFile(this.props.file.id);\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const {file}= this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <span className=\"mx-auto\">Serial Number<br/>{file.serial}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                            <h3>{file.filename}</h3>\r\n                            <p>{file.description}</p>\r\n                            <p><strong>Upload Date: </strong>{file.uploadDate}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 d-none d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to=\"/dashboard\" onClick={this.onDownloadClick} >\r\n                                    <li className=\"list-group-item update\">\r\n                                        <i className=\"fas fa-file-download\"> Download</i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to=\"/dashboard\" onClick={this.onUpdateClick} >\r\n                                    <li className=\"list-group-item update\">\r\n                                        <i className=\"far fa-window-restore\"> Rename File Name</i>\r\n                                    </li>\r\n                                </Link>\r\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete</i>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst ConnectedFileItem= connect(null, {deleteFile, downloadFile, updateFile})(FileItem);\r\n\r\nexport default ConnectedFileItem;","import axios from \"axios\";\r\n\r\nconst getAllFiles= () => async dispatch => {\r\n    try {\r\n        const response= await axios.get(\"/api/files\");\r\n        dispatch({\r\n            type: \"GET_FILES\",\r\n            payload: response.data\r\n        })\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\nconst addFile= (newFile, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/files\", newFile);\r\n        history.push(\"/dashboard\");\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n\r\n    }\r\n};\r\nconst updateFile= (newFile, update) => async dispatch => {\r\n    try {\r\n        await axios.post(`/api/files/update`, newFile);\r\n        update();\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n\r\n    }\r\n};\r\nconst deleteFile= (fileId) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/files/${fileId}`);\r\n        dispatch({\r\n            type: \"DELETE_FILE\",\r\n            payload: fileId\r\n        })\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n\r\n    }\r\n}\r\nconst downloadFile= (fileId, filename) => async dispatch => {\r\n    try {\r\n        const response= await axios.get(`/api/files/download/${fileId}`);\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        const fileName = filename; // whatever your file name .\r\n        link.setAttribute('download', fileName);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        link.remove();// you need to remove that elelment which is created before.\r\n\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: {}\r\n        })\r\n    } catch(error) {\r\n        dispatch({\r\n            type: \"GET_ERRORS\",\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport {getAllFiles, addFile, updateFile, deleteFile, downloadFile };","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport \"bootstrap\";\r\nimport bootbox from \"bootbox\";\r\n\r\nimport {getAllFiles} from \"./../actions/fileActions\";\r\nimport {clearErrors} from \"./../actions/errorActions\";\r\n\r\nimport FileItem from \"./FileItem\";\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            errors: false,\r\n        }\r\n        this.updateComp= this.updateComp.bind(this);\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        if(recProps.myValid) {\r\n            this.setState({\r\n                errors: recProps.myValid\r\n            })\r\n        }\r\n        if(recProps.myErrors.accessDenied) {\r\n            bootbox.alert({\r\n                message: recProps.myErrors.accessDenied,\r\n                className: 'rubberBand animated alert alert-danger text-center'\r\n            });\r\n            this.props.clearErrors();\r\n        }\r\n    }\r\n    componentDidMount(e) {\r\n        this.props.getAllFiles();\r\n    }\r\n    updateComp() {\r\n        this.props.getAllFiles();\r\n    }\r\n    render() {\r\n        const {myFiles, myValid}= this.props;\r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            {\r\n                                myValid && \r\n                                (\r\n                                    <Link to=\"/addFile\" className=\"btn btn-lg btn-info\">\r\n                                    Upload\r\n                                    </Link>\r\n                                )\r\n                            }\r\n                            <br />\r\n                            <hr /> \r\n                            <hr />\r\n                            {\r\n                                !myValid && \r\n                                (\r\n                                    <div className=\"alert alert-danger text-center\">\r\n                                    <strong>Unauthorized access...</strong><br />\r\n                                    Please log in to use the File Management Tool!<br />\r\n                                    <Link to=\"/signin\" className=\"btn btn-lg btn-info\">\r\n                                    Login\r\n                                    </Link>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            {\r\n                                myFiles.length === 0 && myValid && \r\n                                (\r\n                                    <div className=\"alert alert-success text-center\">\r\n                                    Welcome to your Personal File Management Tool...<br />\r\n                                    Press <strong>Upload</strong> to start uploading files!<br />\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            {\r\n                                myFiles &&\r\n                                myFiles.map(el => {\r\n                                    return (<FileItem update={this.updateComp} key={el.id} file={el} />);\r\n                                })\r\n                            }                        \r\n                            <br />\r\n                            <hr />  \r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps= (storeState) => {\r\n    \r\n    return {\r\n        myFiles: storeState.fileReduxStore.files,\r\n        myValid: storeState.userReduxStore.valid,\r\n        myErrors: storeState.errorReduxStore.errors\r\n    }\r\n}\r\nconst ConnectedDashboard= connect(mapStateToProps, {clearErrors, getAllFiles})(Dashboard);\r\n\r\nexport default ConnectedDashboard;\r\n\r\n","const clearErrors= () => dispatch => {\r\n    dispatch({\r\n        type: \"GET_ERRORS\",\r\n        payload: {}\r\n    })\r\n}\r\n\r\nexport {clearErrors};","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nimport {addFile} from \"./../actions/fileActions\";\r\n\r\nclass File extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            file: null,\r\n            filename: \"\",\r\n            description: \"\",\r\n            errors: {}\r\n        }\r\n        this.onFileChange= this.onFileChange.bind(this);\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        if(recProps.myErrors) {\r\n            this.setState({\r\n                errors: recProps.myErrors\r\n            })\r\n        }\r\n    }\r\n    onFileChange(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            file: e.target.files[0],\r\n            filename: e.target.files[0].name\r\n        })\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const formData= new FormData();\r\n        formData.append(\"filename\", this.state.filename);\r\n        formData.append(\"description\", this.state.description);\r\n        formData.append(\"file\", this.state.file);\r\n        \r\n        this.props.addFile(formData, this.props.history);\r\n    }\r\n    render() {\r\n        const {errors}= this.state;\r\n        return (\r\n            <div>  \r\n                <div className=\"register\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Upload a file</h5>\r\n                                {\r\n                                    errors.file && \r\n                                    (\r\n                                        <div className=\"alert alert-danger text-center\">\r\n                                        <strong>{errors.file}</strong><br />\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"custom-file\">\r\n                                            <input \r\n                                                type=\"file\" \r\n                                                accept=\".txt,.pdf\"\r\n                                                className={classnames(\"form-control form-control-lg\", {\r\n                                                    \"is-invalid\": errors.filename\r\n                                                })} \r\n                                                name=\"file\" \r\n                                                onChange={this.onFileChange}/>\r\n                                            {errors.file && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.file}\r\n                                            </div>\r\n                                          )}\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <hr />\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" \r\n                                        disabled\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                                    \"is-invalid\": errors.filename\r\n                                                })} \r\n                                        placeholder=\"File Name\"\r\n                                        name=\"filename\"\r\n                                        value={this.state.filename}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.filename && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.filename}\r\n                                            </div>\r\n                                          )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.description\r\n                                        })} \r\n                                        placeholder=\"File Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange}></textarea>\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.description}\r\n                                            </div>\r\n                                          )}\r\n                                    </div>\r\n                                    <input type=\"submit\" value=\"Upload\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (storeState) => {\r\n    return {\r\n        myErrors: storeState.errorReduxStore.errors\r\n    }\r\n}\r\nconst connectedFile= connect(mapStateToProps, {addFile})(File);\r\n\r\nexport default connectedFile;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass LandingPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">File Management System</h1>\r\n                                <p className=\"lead\">\r\n                                    Please log in to start managing your files!\r\n                                </p>\r\n                                <hr />\r\n                                <Link to=\"/signup\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                    Sign Up\r\n                                </Link>\r\n                                <Link to=\"/signin\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst ConnectedLandingPage= connect(null, null)(LandingPage);\r\n\r\nexport default ConnectedLandingPage;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {signIn} from \"./../../actions/userAction\";\r\n\r\nclass Signin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        }\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        console.log(\"RECIEVED\", recProps);\r\n        if(recProps.myError) {\r\n            this.setState({\r\n                errors: recProps.myError\r\n            })\r\n        }\r\n        if(recProps.myValid) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const loginReq= {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        this.props.signIn(loginReq);\r\n    }\r\n    render() {\r\n        const {errors}= this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            {\r\n                                errors.username && \r\n                                (\r\n                                    <div className=\"alert alert-danger text-center\">\r\n                                    <strong>Sign up instead?</strong><br />\r\n                                    <Link to=\"/signup\" className=\"btn btn-lg btn-info\">\r\n                                    Sign Up\r\n                                    </Link>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"email\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })} \r\n                                        placeholder=\"Email Address\" \r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.username && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.username}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}  \r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.password && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.password}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= (currState) => {\r\n    return {\r\n        myUser: currState.userReduxStore.user,\r\n        myError: currState.errorReduxStore.errors,\r\n        myValid: currState.userReduxStore.valid\r\n    }\r\n}\r\n\r\nconst ConnectedSignin= connect(mapStateToProps, {signIn})(Signin);\r\n\r\nexport default ConnectedSignin;","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\nimport {signUp} from \"./../../actions/userAction\";\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            fullname: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            passwordConfirm: \"\",\r\n            role: \"\",\r\n            errors: {}\r\n        }\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n    componentWillReceiveProps(recProps) {\r\n        if(recProps.myErrors) {\r\n            this.setState({\r\n                errors: recProps.myErrors\r\n            })\r\n        }\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser= {\r\n            fullname: this.state.fullname,\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            role: this.state.role,\r\n            passwordConfirm: this.state.passwordConfirm\r\n        }\r\n        this.props.signUp(newUser, this.props.history);\r\n    }\r\n    render() {\r\n        const { errors }= this.state;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            {\r\n                                errors.username && \r\n                                (\r\n                                    <div className=\"alert alert-danger text-center\">\r\n                                    <strong>Sign in instead?</strong><br />\r\n                                    <Link to=\"/signin\" className=\"btn btn-lg btn-info\">\r\n                                    Sign in\r\n                                    </Link>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.fullname\r\n                                        })} \r\n                                        placeholder=\"Name\" \r\n                                        name=\"fullname\"\r\n                                        required\r\n                                        value={this.state.fullname}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.fullname && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.fullname}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"email\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })} \r\n                                        placeholder=\"Email Address\" \r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.username && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.username}\r\n                                            </div>\r\n                                          )}\r\n        \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}  \r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.password && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.password}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.passwordConfirm\r\n                                        })} \r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"passwordConfirm\"\r\n                                        value={this.state.passwordConfirm}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.passwordConfirm && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.passwordConfirm}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.role\r\n                                        })} \r\n                                        name=\"role\"\r\n                                        value={this.state.role}\r\n                                        onChange={this.onChange}>\r\n                                        <option value=\"\">Select Role</option>\r\n                                        <option value=\"ADMIN\">Adminstrator</option>\r\n                                        <option value=\"USER\">User</option>\r\n                                    </select>\r\n                                    {errors.role && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                              {errors.role}\r\n                                            </div>\r\n                                          )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToError= (currState) => {\r\n    return {\r\n        myErrors: currState.errorReduxStore.errors\r\n    }\r\n}\r\nconst ConnectedSignup= connect(mapStateToError, {signUp})(Signup);\r\n\r\nexport default ConnectedSignup;","import React, {Component} from 'react';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter, Route } from \"react-router-dom\";\nimport store from \"./store/store\";\n/**Styling**/\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n/*********Components**********/\nimport Header from \"./components/layout/Header\";\nimport Dashboard from \"./components/Dashboard\";\nimport File from \"./components/File\";\nimport LandingPage from \"./components/layout/LandingPage\";\nimport Signin from \"./components/layout/Signin\";\nimport Signup from \"./components/layout/Signup\";\n/*******************************/\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n              <Header />\n              <Route path=\"/\" component={LandingPage} exact={true} />\n              <Route path=\"/signin\" component={Signin} exact={true} />\n              <Route path=\"/signup\" component={Signup} exact={true} />\n              <Route path=\"/dashboard\" component={Dashboard} exact={true}/>\n              <Route path=\"/addFile\" component={File} exact={true} />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}